% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateDistance.R
\name{getDissimilarity}
\alias{getDissimilarity}
\alias{getDissimilarity,TreeSummarizedExperiment-method}
\alias{getDissimilarity,SummarizedExperiment-method}
\alias{getDissimilarity,ANY-method}
\alias{addDissimilarity}
\alias{addDissimilarity,SummarizedExperiment-method}
\title{Calculate sample distances with \code{vegan}}
\usage{
getDissimilarity(x, method, ...)

\S4method{getDissimilarity}{TreeSummarizedExperiment}(
  x,
  method,
  assay.type = "counts",
  tree.name = "phylo",
  transposed = FALSE,
  ...
)

\S4method{getDissimilarity}{SummarizedExperiment}(x, method, assay.type = "counts", transposed = FALSE, ...)

\S4method{getDissimilarity}{ANY}(x, method, ...)

addDissimilarity(x, method, ...)

\S4method{addDissimilarity}{SummarizedExperiment}(
  x,
  method,
  assay.type = "counts",
  transposed = FALSE,
  name = method,
  ...
)
}
\arguments{
\item{x}{a
\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment}}
object containing a tree.}

\item{...}{other arguments passed onto \code{FUN}}

\item{transposed}{Logical scalar, is x transposed with cells in rows?}

\item{FUN}{a \code{function} for distance calculation. The function must
expect the input matrix as its first argument. With rows as samples
and columns as features.}

\item{assay_name}{a single \code{character} value for specifying which
assay to use for calculation.}

\item{exprs_values}{a single \code{character} value for specifying which
assay to use for calculation.
(Please use \code{assay_name} instead.)}

\item{abund_values}{a single \code{character} value for specifying which
assay to use for calculation.
(Please use \code{assay_name} instead. At some point \code{abund_values}
will be disabled.)}
}
\value{
a sample-by-sample distance matrix, suitable for NMDS, etc.
}
\description{
Will be removed by Bioc 3.15
}
\details{
\code{getDissimilarity} calculates a distance matrix between samples. The
type of distance calculated can be modified by setting \code{FUN}, which
expects a function with a matrix input as its first argument.
}
\examples{
# generate some example data
mat <- matrix(1:60, nrow = 6)
df <- DataFrame(n = c(1:6))
tse <- TreeSummarizedExperiment(assays = list(counts = mat),
                                rowData = df)
\dontrun{
getDissimilarity(tse)
}

}
