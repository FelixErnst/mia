% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformCounts.R
\name{transformCounts}
\alias{transformCounts}
\alias{transformSamples}
\alias{transformSamples,SummarizedExperiment-method}
\alias{transformCounts,SummarizedExperiment-method}
\alias{transformFeatures}
\alias{transformFeatures,SummarizedExperiment-method}
\alias{ZTransform}
\alias{ZTransform,SummarizedExperiment-method}
\alias{relAbundanceCounts}
\alias{relAbundanceCounts,SummarizedExperiment-method}
\title{Transform Counts}
\usage{
transformSamples(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10",
    "normalize", "pa", "rank", "rclr", "relabundance", "rrank", "standardize", "total"),
  name = method,
  ...
)

\S4method{transformSamples}{SummarizedExperiment}(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10",
    "normalize", "pa", "rank", "rclr", "relabundance", "rrank", "standardize", "total"),
  name = method,
  ...
)

transformCounts(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10", "max",
    "normalize", "pa", "range", "rank", "rclr", "relabundance", "rrank", "standardize",
    "total", "z"),
  name = method,
  ...
)

\S4method{transformCounts}{SummarizedExperiment}(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10", "max",
    "normalize", "pa", "range", "rank", "rclr", "relabundance", "rrank", "standardize",
    "total", "z"),
  name = method,
  ...
)

transformFeatures(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("log", "log10", "max", "pa", "range", "standardize", "z"),
  name = method,
  ...
)

\S4method{transformFeatures}{SummarizedExperiment}(
  x,
  assay_name = abund_values,
  abund_values = "counts",
  method = c("log", "log10", "max", "pa", "range", "standardize", "z"),
  name = method,
  ...
)

ZTransform(x, ...)

\S4method{ZTransform}{SummarizedExperiment}(x, ...)

relAbundanceCounts(x, ...)

\S4method{relAbundanceCounts}{SummarizedExperiment}(x, ...)
}
\arguments{
\item{x}{A
\code{\link[SummarizedExperiment:SummarizedExperiment-class]{SummarizedExperiment}}
object.}

\item{assay_name}{A single character value for selecting the
\code{\link[SummarizedExperiment:SummarizedExperiment-class]{assay}} to be
transformed.}

\item{abund_values}{a single \code{character} value for specifying which
assay to use for calculation.
(Please use \code{assay_name} instead. At some point \code{abund_values}
will be disabled.)}

\item{method}{A single character value for selecting the transformation
method.}

\item{name}{A single character value specifying the name of transformed
abundance table.}

\item{...}{additional arguments passed on to \code{vegan:decostand}:
\itemize{
\item{\code{reference_values}:} {A single value which will be used to fill
reference sample's column in returned assay when calculating alr.
(default: \code{reference_values = NA})}
}}

\item{pseudocount}{NULL or numeric value deciding whether pseudocount is
added. The numeric value specifies the value of pseudocount.}

\item{threshold}{A numeric value for setting threshold for pa transformation.
By default it is 0. (Only used for \code{method = "pa"})}
}
\value{
\code{transformCounts}, \code{transformSamples}, \code{transformFeatures},
\code{relAbundanceCounts}, and \code{ZTransform} return \code{x} with additional,
transformed abundance table named \code{name} in the \code{\link{assay}}.
}
\description{
Variety of transformations for abundance data, stored in \code{assay}.
See details for options.
}
\details{
These functions provide a variety of options for transforming abundance data.
The transformed data is calculated and stored in a new \code{assay}.

Available wrapper functions include:

\itemize{

\item{\code{transformSamples}} sample-wise (column-wise) transformation.
Alias for \code{transformCounts}.

\item{\code{transformFeatures}} feature-wise (row-wise) transformation.

\item{\code{ZTransform}} Shortcut for Z-transformation.

\item{\code{relAbundanceCounts}} Shortcut for fetching relative abundance table.

}

Altogether, \code{transformCounts} or \code{transformSamples} and \code{transformFeatures}
apply transformations to the abundance table (assay).
The available transformation methods include:

\itemize{

\item{'alr'}{ Additive log ratio (alr) transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'chi.square'}{ Chi square transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'clr'}{ Centered log ratio (clr) transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'frequency'}{ Frequency transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'hellinger'}{ Hellinger transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'log'}{ Logartihmic transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'log10'}{ log10 transformation can be used for reducing the skewness of the data.
\deqn{log10 = \log_{10} x}{%
log10 = log10(x)}
where \eqn{x} is a single value of data.}

\item{'normalize'}{ Normalize transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'pa'}{ Transforms table to presence/absence table. All abundances higher
than \eqn{\epsilon} are transformed to 1 (present), otherwise 0 (absent).
By default, threshold is 0.}

\item{'rank'}{ Rank transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'rclr'}{ Robust clr transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'relabundance'}{ Relative transformation (alias for 'total'), please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'rrank'}{ Relative rank transformation, please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'standardize'}{ Z transformation (alias for 'z'), please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'total'}{ Relative transformation (alias for 'relabundance'), please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

\item{'z'}{ Z transformation (alias for 'standardize'), please refer to
\code{\link[vegan:decostand]{decostand}} for details.}

}
}
\examples{
data(esophagus)
x <- esophagus

# By specifying 'method', it is possible to apply different transformations, 
# e.g. compositional transformation.
x <- transformSamples(x, method = "relabundance")

# The target of transformation can be specified with "assay_name"
# Pseudocount can be added by specifying 'pseudocount'.

# Get pseudocount; here smallest positive value
mat <- assay(x, "relabundance") 
pseudonumber <- min(mat[mat>0])
# Perform CLR
x <- transformSamples(x, assay_name = "relabundance", method = "clr", 
                      pseudocount = pseudonumber
                      )
                      
head(assay(x, "clr"))

# Name of the stored table can be specified.
x <- transformSamples(x, method="hellinger", name="test")
head(assay(x, "test"))

# pa returns presence absence table. With 'threshold', it is possible to set the
# threshold to a desired level. By default, it is 0.
x <- transformSamples(x, method = "pa", threshold = 35)
head(assay(x, "pa"))

# rank returns ranks of taxa. It is calculated column-wise, i.e., per sample
# and using the ties.method="first" from the colRanks function
x <- transformSamples(x, method = "rank")
head(assay(x, "rank"))

# transformCounts is an alias for transformSamples
x <- transformCounts(x, method = "relabundance", name = "test2")
head(assay(x, "test2"))

# In order to use other ranking variants, modify the chosen assay directly:
assay(x, "rank_average", withDimnames = FALSE) <- colRanks(assay(x, "counts"), 
                                                           ties.method="average", 
                                                           preserveShape = TRUE)  
                                                           
# If you want to do the transformation for features, you can do that by using
x <- transformFeatures(x, method = "log10", name = "log10_features", pseudocount = 1)
head(assay(x, "log10_features"))

# Z-transform can be done for features by using shortcut function
x <- ZTransform(x)
head(assay(x, "z"))

# For visualization purposes it is sometimes done by applying CLR for samples,
# followed by Z transform for taxa
x <- ZTransform(transformCounts(x, method="clr", assay_name = "counts", pseudocount = 1))

# Relative abundances can be also calculated with the dedicated
# relAbundanceCounts function.
x <- relAbundanceCounts(x)
head(assay(x, "relabundance"))
}
\references{
Gloor GB, Macklaim JM, Pawlowsky-Glahn V & Egozcue JJ (2017)
Microbiome Datasets Are Compositional: And This Is Not Optional.
Frontiers in Microbiology 8: 2224. doi: 10.3389/fmicb.2017.02224

Legendre P & Gallagher ED (2001)
Ecologically meaningful transformations for ordination of species data.
Oecologia 129: 271-280.

Martino C, Morton JT, Marotz CA, Thompson LR, Tripathi A, Knight R & Zengler K
(2019) A Novel Sparse Compositional Technique Reveals Microbial Perturbations.
mSystems 4: 1. doi: 10.1128/mSystems.00016-19
}
\author{
Leo Lahti and Tuomas Borman. Contact: \url{microbiome.github.io}
}
